package game.battleship.grid;

import game.battleship.Player;
import game.battleship.grid.objects.GridCell;
import game.battleship.grid.objects.Ship;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class GridTest
{

	@Test
	void addShip()
	{
		Integer playableGridSize;
		playableGridSize = 10;
		Grid grid;
		Ship ship;

		// Valid coords
		grid = new Grid( playableGridSize ); // rebuild the board grid
		ship = new Ship(1, 1, 5, "S" );
		assertTrue( grid.addShip( ship ) );

		grid = new Grid( playableGridSize ); // rebuild the board grid
		ship = new Ship(1, 1, 5, "E" );
		assertTrue( grid.addShip( ship ) );


		// Invalid coords
		grid = new Grid( playableGridSize ); // rebuild the board grid
		ship = new Ship(1, 1, 5, "N" );
		assertFalse( grid.addShip( ship ) );

		grid = new Grid( playableGridSize ); // rebuild the board grid
		ship = new Ship(1, 1, 5, "W" );
		assertFalse( grid.addShip( ship ) );

		grid = new Grid( playableGridSize ); // rebuild the board grid
		ship = new Ship(0, 0, 5, "S" );
		assertFalse( grid.addShip( ship ) );

		grid = new Grid( playableGridSize ); // rebuild the board grid
		ship = new Ship(-1, -1, 5, "S" );
		assertFalse( grid.addShip( ship ) );

		grid = new Grid( playableGridSize ); // rebuild the board grid
		ship = new Ship(11, 11, 5, "S" );
		assertFalse( grid.addShip( ship ) );
	}


	@Test
	void checkPlayableGridPosition()
	{

	}

	@Test
	void checkPlayableGridSingleCoordinate()
	{
		Integer playableGridSize = 10;
		Grid grid = new Grid( playableGridSize );

		assertFalse( grid.checkPlayableGridSingleCoordinate( -1 ) );
		assertFalse( grid.checkPlayableGridSingleCoordinate( 0 ) );
		assertTrue( grid.checkPlayableGridSingleCoordinate( 1 ) );
		assertTrue( grid.checkPlayableGridSingleCoordinate( 2 ) );
		assertTrue( grid.checkPlayableGridSingleCoordinate( playableGridSize ) );
		assertFalse( grid.checkPlayableGridSingleCoordinate( playableGridSize + 1 ) );
	}

	@Test
	/**
	 * Test with a blank board with size different sizes
	 */
	void displayGridString()
	{
		Integer playableGridSize;
		Player player;
		String result, comparisonResult = "";


		// Test with below  minimum allowed size, which should default to grid size 10.
		playableGridSize = 2;
		player = new Player( playableGridSize, "Player" );

		result = player.displayGridString();
		comparisonResult =
			"+-------------------------------------------+\n" +
				"|   | A | B | C | D | E | F | G | H | I | J |\n" +
				"|---|---|---|---|---|---|---|---|---|---|---|\n" +
				"| 1 |   |   |   |   |   |   |   |   |   |   |\n" +
				"|---|---|---|---|---|---|---|---|---|---|---|\n" +
				"| 2 |   |   |   |   |   |   |   |   |   |   |\n" +
				"|---|---|---|---|---|---|---|---|---|---|---|\n" +
				"| 3 |   |   |   |   |   |   |   |   |   |   |\n" +
				"|---|---|---|---|---|---|---|---|---|---|---|\n" +
				"| 4 |   |   |   |   |   |   |   |   |   |   |\n" +
				"|---|---|---|---|---|---|---|---|---|---|---|\n" +
				"| 5 |   |   |   |   |   |   |   |   |   |   |\n" +
				"|---|---|---|---|---|---|---|---|---|---|---|\n" +
				"| 6 |   |   |   |   |   |   |   |   |   |   |\n" +
				"|---|---|---|---|---|---|---|---|---|---|---|\n" +
				"| 7 |   |   |   |   |   |   |   |   |   |   |\n" +
				"|---|---|---|---|---|---|---|---|---|---|---|\n" +
				"| 8 |   |   |   |   |   |   |   |   |   |   |\n" +
				"|---|---|---|---|---|---|---|---|---|---|---|\n" +
				"| 9 |   |   |   |   |   |   |   |   |   |   |\n" +
				"|---|---|---|---|---|---|---|---|---|---|---|\n" +
				"|10 |   |   |   |   |   |   |   |   |   |   |\n" +
				"+-------------------------------------------+\n";
		assertTrue( result.contentEquals( comparisonResult ) );


		// Test the minimum allowed size
		playableGridSize = 10;
		player = new Player( playableGridSize, "Player" );

		result = player.displayGridString();
		comparisonResult =
			"+-------------------------------------------+\n" +
			"|   | A | B | C | D | E | F | G | H | I | J |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 1 |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 2 |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 3 |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 4 |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 5 |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 6 |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 7 |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 8 |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 9 |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|10 |   |   |   |   |   |   |   |   |   |   |\n" +
			"+-------------------------------------------+\n";
		assertTrue( result.contentEquals( comparisonResult ) );


		// Test maximum board size
		playableGridSize = 26;
		player = new Player( playableGridSize, "Player" );

		result = player.displayGridString();
		comparisonResult = "+-----------------------------------------------------------------------------------------------------------+\n" +
			"|   | A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 1 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 2 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 3 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 4 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 5 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 6 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 7 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 8 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 9 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|10 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|11 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|12 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|13 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|14 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|15 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|16 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|17 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|18 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|19 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|20 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|21 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|22 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|23 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|24 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|25 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|26 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"+-----------------------------------------------------------------------------------------------------------+\n";
		assertTrue( result.contentEquals( comparisonResult ) );


		// Test maximum board size
		playableGridSize = 48;
		player = new Player( playableGridSize, "Player" );

		result = player.displayGridString();
		comparisonResult = "+-----------------------------------------------------------------------------------------------------------+\n" +
			"|   | A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 1 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 2 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 3 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 4 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 5 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 6 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 7 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 8 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"| 9 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|10 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|11 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|12 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|13 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|14 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|15 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|16 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|17 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|18 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|19 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|20 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|21 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|22 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|23 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|24 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|25 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n" +
			"|26 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n" +
			"+-----------------------------------------------------------------------------------------------------------+\n";
		assertTrue( result.contentEquals( comparisonResult ) );

	}


	@Test
	void getGridCell()
	{
		Integer playableGridSize = 10;
		Grid grid;
		GridCell result;
		Ship ship;
		String comparisonGridCellDefaultResult = "   ";


		// Test on a new blank grid
		grid = new Grid( playableGridSize ); // rebuild the board grid

		// Far upper left position of the board
		result =  grid.getGridCell( 1,1 );
		assertTrue( comparisonGridCellDefaultResult.contentEquals( result.getContents() ) );

		// Little bit inward position of the board
		result =  grid.getGridCell( 2,2 );
		assertTrue( comparisonGridCellDefaultResult.contentEquals( result.getContents() ) );

		// Far lower right position of the board
		result =  grid.getGridCell( playableGridSize, playableGridSize );
		assertTrue( comparisonGridCellDefaultResult.contentEquals( result.getContents() ) );




		// Test on getting an occupied space

		// Far upper left position of the board
		grid = new Grid( playableGridSize ); // rebuild the board grid
		ship = new Ship(1, 1, 5, "S" );
		grid.addShip( ship );
		result =  grid.getGridCell( 1, 1 );
		assertTrue( ship.getContents().contentEquals( result.getContents() ) );

		// Far lower right position of the board
		grid = new Grid( playableGridSize ); // rebuild the board grid
		ship = new Ship(playableGridSize, playableGridSize, 5, "N" );
		grid.addShip( ship );
		result =  grid.getGridCell( playableGridSize, playableGridSize );
		assertTrue( ship.getContents().contentEquals( result.getContents() ) );
	}

}